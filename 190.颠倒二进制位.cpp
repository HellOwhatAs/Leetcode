/*
 * @lc app=leetcode.cn id=190 lang=cpp
 *
 * [190] 颠倒二进制位
 */

// @lc code=start
class Solution {
public:
    uint32_t reverseBits(uint32_t n) {
        n=((0b01010101010101010101010101010101&n)<<1)|((0b10101010101010101010101010101010&n)>>1);
        n=((0b00110011001100110011001100110011&n)<<2)|((0b11001100110011001100110011001100&n)>>2);
        n=((0b00001111000011110000111100001111&n)<<4)|((0b11110000111100001111000011110000&n)>>4);
        n=((0b00000000111111110000000011111111&n)<<8)|((0b11111111000000001111111100000000&n)>>8);
        return ((0b00000000000000001111111111111111&n)<<16)|((0b11111111111111110000000000000000&n)>>16);
    }
};
// @lc code=end

